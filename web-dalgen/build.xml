<?xml version="1.0" encoding="utf-8"?>

<project name="wcs-dalgen" default="release" basedir=".">
	<property environment="env"/>
	<property name="ANTX_HOME" value="D:/apache-ant-1.10.5" />
	<!-- define properties -->
	<property name="name" value="dalgen" />

	<!--<loadproperties srcFile="db.properties" />-->
	<!-- properties for directory -->
	<property name="dir.conf" value="${user.home}/.middlegen/conf" />
	<property name="dir.lib" value="${user.home}/.middlegen/lib" />
	<property name="dir.target" value="${basedir}/target" />
	<property name="dir.deploy" value="${basedir}/../web-common-dal/src/main" />

	<!-- properties for middlegen plugin -->
	<property name="middlegen.templates" value="templates" />
	<property name="middlegen.destination" value="${dir.deploy}" />
	<property name="middlegen.config.file" value="${basedir}/dal-config.xml" />
	<property name="middlegen.package" value="com.wonder.wcs.common.dal.auto" />
	<property name="middlegen.package.dir" value="com/wonder/wcs/common/dal/auto" />

	<!-- insert database configuration here -->
   	<property name="database.driver.file" value="${dir.lib}/mysql-jdbc-5.0.4.jar" />
	<property name="database.driver.classpath" value="${database.driver.file}" />
	<property name="database.url" value="jdbc:mysql://47.105.123.155:3306/mydb?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" />
	<property name="database.userid" value="root" />
	<property name="database.password" value="a511002..aa" />
	<property name="database.schema" value="mydb" />
	<property name="database.driver" value="com.mysql.jdbc.Driver" />

	<!-- classpath -->
	<path id="classpath.main">
		<pathelement path="${dir.conf}" />
		<fileset dir="${dir.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- compile middlegen plugin -->
	<target name="compile" depends="" description="">
		<mkdir dir="${dir.lib}" />
		<mkdir dir="${dir.conf}" />
		<copy todir="${dir.lib}">
			<fileset dir="D:\antx\repository\caozong\thirdparty\dalgen_10">
				<include name="**/*.jar" />
				<exclude name="**/*src.jar" />
				<exclude name="**/*doc.jar" />
			</fileset>
		</copy>
		<unjar src="${dir.lib}/alipay-tools-dalgen-1.1.0.2013.05.09.jar" dest="${dir.conf}" />
		<copy file="${dir.conf}/middlegen-plugin.xml" todir="${dir.conf}/META-INF" />
	</target>

	<!-- sanity check (database driver must be available) -->
	<!--<target name="check-driver-present">-->
		<!--<available file="${database.driver.file}" type="file" property="driver.present" />-->
	<!--</target>-->
	<!--<target name="panic-if-driver-not-present" unless="driver.present">-->
		<!--<fail>-->
        <!--JDBC驱动程序"${database.driver.file}"不存在        -->
		<!--</fail>-->
	<!--</target>-->

	<!-- =================================================================== -->
	<!-- Run Middlegen                                                       -->
	<!-- =================================================================== -->
	<target name="middlegen" depends="compile" description="">

		<taskdef name="middlegen" classname="middlegen.MiddlegenTask" classpathref="classpath.main" />
		<echo message="" />
		<input message="请输入目标表名,多表以逗号分隔,全表生成请输入'*',只生成Sequence请输入'seq': " addproperty="tabs" />

		<echo message="DAL配置文件：{middlegen.config.file}." />
		<echo message="开始自动生成DAL..." />

		<mkdir dir="${middlegen.destination}" />
		<middlegen configfile="${middlegen.config.file}" runModel="SOFA" tabs="${tabs}" appname="${name}" databaseurl="${database.url}" driver="${database.driver}" username="${database.userid}" password="${database.password}" schema="${database.schema}" prefsdir="${dir.target}">

			<iwallet destination="" mergedir="${middlegen.templates}/mergedir" package="${middlegen.package}">

				<!-- 生成数据对象(DataObject)基类 -->
				<!-- <fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/base-do.vm" filename="dataobject/BaseDO.java" /> -->

				<!-- 为每一张表生成一个数据对象类 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/do.vm" filename="dataobject/{0}DO.java" />

				<!-- 为每一张表生成一个DAO接口 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/dao.vm" filename="daointerface/{0}DAO.java" />

				<!-- 为每一张表生成ibatis DAO实现 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/ibatis.vm" filename="ibatis/Ibatis{0}DAO.java" />

				<!-- 生成访问sequence表的DAO接口 -->
				<!--fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/seq-dao.vm" filename="daointerface/SeqDAO.java" /> -->

				<!-- 生成SequenceDAO的Ibatis实现 -->
				<!--fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${middlegen.templates}/seq-ibatis.vm" filename="ibatis/IbatisSeqDAO.java" /> -->
                
				<!-- 为每一张表生成一个sqlmapping文件 -->
				<fileproducer destination="${middlegen.destination}/resources" template="${middlegen.templates}/table-sqlmap-mapping.vm" filename="sqlmap/auto/{0}-sqlmap-mapping.xml" />

				<!-- 生成公共的sqlmapping文件 -->
				<fileproducer destination="${middlegen.destination}/resources" template="${middlegen.templates}/common-sqlmap-mapping.vm" filename="sqlmap/auto/common-sqlmap-mapping.xml" />

				<!-- 生成ibatis的配置文件-->
				<fileproducer destination="${middlegen.destination}/resources" template="${middlegen.templates}/sqlmap.vm" filename="sqlmap/auto/sqlmap-auto.xml" />

				<!-- 生成DAO beans的Spring配置文件 -->
				<fileproducer destination="${middlegen.destination}/resources/META-INF/spring" template="${middlegen.templates}/beans-dal-dao.vm" filename="web-common-dal-dao.xml" />
			</iwallet>
		</middlegen>
		<echo message="DAL生成已成功!" />
	</target>

	<target name="clean-perf" depends="" description="">
		<delete dir="${dir.target}/*.properties" />
	</target>

	<target name="clean-middlegen" depends="" description="">
		<delete dir="${user.home}/.middlegen/lib" />
		<delete dir="${user.home}/.middlegen/conf" />
	</target>

	<target name="clean" depends="clean-perf,clean-middlegen" description="clean all generated stuff" />

	<!-- The default target to use -->
	<target name="release" depends="clean,middlegen" description="" />
</project>
